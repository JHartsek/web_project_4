(()=>{"use strict";var e="";const t=e+"50fce9df697a07971411.svg",n=e+"7a0b85df4e06c9be0cf6.jpg",r=e+"8f7af7ee8641b74b1e28.jpg";function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t,n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_handleDelete",(function(){o._post.remove(),o._post=null})),i(this,"_handleLike",(function(e){e.target.classList.toggle("post__caption-like_active")})),this._title=t.title,this._link=t.link,this.templateSelector=n,this._handleCardClick=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._postTemplateElement=document.querySelector(this.templateSelector),this._postTemplate=this._postTemplateElement.content,this._postElement=this._postTemplate.querySelector(".post").cloneNode(!0),this._postElement}},{key:"createPost",value:function(){return this._post=this._getTemplate(),this._postImageElement=this._post.querySelector(".post__image"),this._postImageElement.setAttribute("src",this._link),this._postImageElement.setAttribute("alt",this._title),this._postCaptionTextElement=this._post.querySelector(".post__caption-text"),this._postCaptionTextElement.textContent=this._title,this._setEventListeners(),this._post}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton=this._post.querySelector(".post__delete"),this._deleteButton.addEventListener("click",this._handleDelete),this._image=this._post.querySelector(".post__image"),this._image.addEventListener("click",(function(){e._handleCardClick(e._title,e._link)})),this._likeButton=this._post.querySelector(".post__caption-like"),this._likeButton.addEventListener("click",this._handleLike)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=l((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a(this,"_showInputError",(function(e,t){var n=r._formElement.querySelector(".".concat(e.id,"-input-error"));e.classList.add(r._inputErrorClass),n.textContent=t,n.classList.add(r._errorClass)})),a(this,"_hideInputError",(function(e){var t=r._formElement.querySelector(".".concat(e.id,"-input-error"));e.classList.remove(r._inputErrorClass),t.textContent=" ",t.classList.remove(r._errorClass)})),a(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),a(this,"_hasInvalidInput",(function(){return r._formInputs.some((function(e){return!e.validity.valid}))})),a(this,"resetValidation",(function(){r.toggleSubmitButton(),r._formInputs.forEach((function(e){r._hideInputError(e)}))})),a(this,"toggleSubmitButton",(function(){r._hasInvalidInput(r._formInputs)?(r._submitButton.classList.add(r._inactiveButtonClass),r._submitButton.setAttribute("disabled",!0)):(r._submitButton.classList.remove(r._inactiveButtonClass),r._submitButton.removeAttribute("disabled"))})),a(this,"_setEventListeners",(function(){r.toggleSubmitButton(r._formInputs,r._submitButton),r._formInputs.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r.toggleSubmitButton(r._formInputs,r._submitButton)}))}))})),a(this,"enableValidation",(function(){r._formElement.addEventListener("submit",(function(e){e.preventDefault()})),r._setEventListeners()})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formInputs=Array.from(this._formElement.querySelectorAll(this._inputSelector))}));function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return t&&p(e.prototype,t),n&&p(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var d=f((function e(t,n){var r=this,o=t.items,i=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),m(this,"renderElements",(function(){r._items.forEach((function(e){r._renderer(e)}))})),m(this,"addItem",(function(e){r._container.prepend(e)})),this._items=o,this._renderer=i,this._container=document.querySelector(n)}));function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var b=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),y(this,"_handleOverlayClick",(function(e){e.target===e.currentTarget&&n.close()})),y(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),this._popupSelector=t,this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popupElement.addEventListener("mousedown",this._handleOverlayClick)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function v(e,t){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},v(e,t)}function g(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return E(e)}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}function j(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(n);if(r){var o=O(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return g(this,e)});function i(e,t,n){var r,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),j(E(u=o.call(this,e)),"_setImagePopupAttributes",(function(e,t){u._image.setAttribute("src",t),u._image.setAttribute("alt",e),u._imageCaption.textContent=e})),j(E(u),"open",(function(e,t){w((r=E(u),O(i.prototype)),"open",r).call(r),u._setImagePopupAttributes(e,t)})),u._image=document.querySelector(".popup__image"),u._imageCaption=document.querySelector(".popup__image-caption"),u}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(b);function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function L(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return B(e)}function B(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=x(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},q.apply(this,arguments)}function x(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}function R(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function u(e,t){var n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),R(B(r=i.call(this,e)),"getInputValues",(function(){return r._userInputs={},r._inputFields.forEach((function(e){r._userInputs[e.name]=e.value})),r._userInputs})),R(B(r),"close",(function(){q((n=B(r),T(u.prototype)),"close",n).call(n),r._form.reset()})),r._form=r._popupElement.querySelector(".form"),r._submitHandler=t,r._inputFields=r._form.querySelectorAll(".form__input"),r}return t=u,(n=[{key:"setEventListeners",value:function(){q(T(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitHandler)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t){var n=t.nameElementSelector,r=t.aboutElementSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileNameElement=document.querySelector(n),this._profileAboutMeElement=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._currentUserInfo={name:this._profileNameElement.textContent,about:this._profileAboutMeElement.textContent},this._currentUserInfo}},{key:"setUserInfo",value:function(e,t){this._profileNameElement.textContent=e,this._profileAboutMeElement.textContent=t}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),U=document.querySelector(".profile__info-edit-button"),M=document.querySelector(".profile-edit-form"),N=document.querySelector("#name"),F=document.querySelector("#about-me"),H=document.querySelector(".profile__add-button"),Y=document.querySelector(".add-post-form"),z={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__input_type_invalid",errorClass:"form__input-error_active"},G=document.querySelector("#logo-image"),J=document.querySelector("#avatar-image"),K=document.querySelector("#initial-popup-image"),Q=new k("#focus-image-popup");function W(e){return new u(e,".template__post",(function(e,t){Q.open(e,t)})).createPost()}Q.setEventListeners();var X=new d({items:[{title:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"},{title:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{title:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"}],renderer:function(e){var t=W(e);X.addItem(t)}},".posts-grid");X.renderElements();var Z=new c(z,Y);Z.enableValidation();var $=new c(z,M);$.enableValidation();var ee=new A("#edit-profile-popup",(function(e){e.preventDefault();var t=ee.getInputValues();ne.setUserInfo(t.name,t["about-me"]),ee.close()}));ee.setEventListeners();var te=new A("#add-post-popup",(function(e){e.preventDefault();var t=W(te.getInputValues());X.addItem(t),te.close()}));te.setEventListeners();var ne=new D({nameElementSelector:".profile__info-name",aboutElementSelector:".profile__info-descriptor"});H.addEventListener("click",(function(){Z.resetValidation(),te.open()})),U.addEventListener("click",(function(){var e;$.resetValidation(),ee.open(),e=ne.getUserInfo(),N.value=e.name,F.value=e.about})),G.src=t,J.src=n,K.src=r})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LG9CQUFxQixzQkFDckJDLHFCQUFzQiw4QkFtQ3hCUyxFQUFjdkYsaUJBQWlCLFNBQVMsV0FDdENzRyxFQUFrQlMsa0JBYmxCRCxHQUFhZCxVQWdCZmIsRUFBa0JuRixpQkFBaUIsU0FBUyxXQS9CNUMsSUFMUWdILEVBcUNOUixFQUFzQk8sa0JBL0J0Qk4sR0FBaUJULE9BTlhnQixFQUFrQkosR0FBS0ssY0FDN0I1QixFQUFVYixNQUFRd0MsRUFBZ0IvQyxLQUNsQ3FCLEVBQVdkLE1BQVF3QyxFQUFnQjlCLFNBeUNyQ1MsRUFBaUJ1QixJQUFNQyxFQUN2QnZCLEVBQW1Cc0IsSUFBTUUsRUFDekJ2QixFQUF5QnFCLElBQU1HLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoZGF0YSwgdGVtcGxhdGVTZWxlY3RvciwgaGFuZGxlQ2FyZENsaWNrKSB7XG4gICAgdGhpcy5fdGl0bGUgPSBkYXRhLnRpdGxlO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy50ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7IFxuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIHRoaXMuX3Bvc3RUZW1wbGF0ZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMudGVtcGxhdGVTZWxlY3Rvcik7XG4gICAgdGhpcy5fcG9zdFRlbXBsYXRlID0gdGhpcy5fcG9zdFRlbXBsYXRlRWxlbWVudC5jb250ZW50O1xuICAgIHRoaXMuX3Bvc3RFbGVtZW50ID0gdGhpcy5fcG9zdFRlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoXCIucG9zdFwiKS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgcmV0dXJuIHRoaXMuX3Bvc3RFbGVtZW50O1xuICB9XG5cbiAgY3JlYXRlUG9zdCgpIHtcbiAgICB0aGlzLl9wb3N0ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9wb3N0SW1hZ2VFbGVtZW50ID0gdGhpcy5fcG9zdC5xdWVyeVNlbGVjdG9yKFwiLnBvc3RfX2ltYWdlXCIpO1xuICAgIHRoaXMuX3Bvc3RJbWFnZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwic3JjXCIsIHRoaXMuX2xpbmspO1xuICAgIHRoaXMuX3Bvc3RJbWFnZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwiYWx0XCIsIHRoaXMuX3RpdGxlKTtcbiAgICB0aGlzLl9wb3N0Q2FwdGlvblRleHRFbGVtZW50ID0gdGhpcy5fcG9zdC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIucG9zdF9fY2FwdGlvbi10ZXh0XCJcbiAgICApO1xuICAgIHRoaXMuX3Bvc3RDYXB0aW9uVGV4dEVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLl90aXRsZTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHJldHVybiB0aGlzLl9wb3N0O1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IHRoaXMuX3Bvc3QucXVlcnlTZWxlY3RvcihcIi5wb3N0X19kZWxldGVcIik7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLl9oYW5kbGVEZWxldGUpO1xuXG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9wb3N0LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9faW1hZ2VcIik7XG4gICAgdGhpcy5faW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl90aXRsZSwgdGhpcy5fbGluayk7XG4gICAgfSlcblxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9wb3N0LnF1ZXJ5U2VsZWN0b3IoXCIucG9zdF9fY2FwdGlvbi1saWtlXCIpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZUxpa2UpO1xuICB9XG5cbiAgX2hhbmRsZURlbGV0ZSA9ICgpID0+IHtcbiAgICB0aGlzLl9wb3N0LnJlbW92ZSgpO1xuICAgIHRoaXMuX3Bvc3QgPSBudWxsO1xuICB9O1xuXG4gIF9oYW5kbGVMaWtlID0gKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoXCJwb3N0X19jYXB0aW9uLWxpa2VfYWN0aXZlXCIpO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gICAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBzZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICAgICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xuICAgICAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzczsgXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7IFxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5fZm9ybUlucHV0cyA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7XG4gICAgfSBcblxuICAgIF9zaG93SW5wdXRFcnJvciA9IChpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkgPT4ge1xuICAgICAgICBjb25zdCBlcnJvck1lc3NhZ2VFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1pbnB1dC1lcnJvcmApO1xuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgICAgICBlcnJvck1lc3NhZ2VFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgICAgICBlcnJvck1lc3NhZ2VFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgfVxuXG4gICAgX2hpZGVJbnB1dEVycm9yID0gKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICBjb25zdCBlcnJvck1lc3NhZ2VFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1pbnB1dC1lcnJvcmApO1xuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpOyBcbiAgICAgICAgZXJyb3JNZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudCA9IFwiIFwiO1xuICAgICAgICBlcnJvck1lc3NhZ2VFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgfVxuXG4gICAgX2NoZWNrSW5wdXRWYWxpZGl0eSA9IChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgICAgaWYoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBfaGFzSW52YWxpZElucHV0ID0gKCkgPT57XG4gICAgICAgIHJldHVybiB0aGlzLl9mb3JtSW5wdXRzLnNvbWUoKGlucHV0KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gIWlucHV0LnZhbGlkaXR5LnZhbGlkO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIHJlc2V0VmFsaWRhdGlvbiA9ICgpID0+IHtcbiAgICAgICAgdGhpcy50b2dnbGVTdWJtaXRCdXR0b24oKTtcbiAgICAgICAgdGhpcy5fZm9ybUlucHV0cy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgdG9nZ2xlU3VibWl0QnV0dG9uID0gKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuX2Zvcm1JbnB1dHMpKSB7XG4gICAgICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7IFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnRvZ2dsZVN1Ym1pdEJ1dHRvbih0aGlzLl9mb3JtSW5wdXRzLCB0aGlzLl9zdWJtaXRCdXR0b24pO1xuICAgICAgICB0aGlzLl9mb3JtSW5wdXRzLmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlU3VibWl0QnV0dG9uKHRoaXMuX2Zvcm1JbnB1dHMsIHRoaXMuX3N1Ym1pdEJ1dHRvbik7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGVuYWJsZVZhbGlkYXRpb24gPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9KVxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yICh7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgICAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTsgXG4gICAgfVxuXG4gICAgcmVuZGVyRWxlbWVudHMgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBhZGRJdGVtID0gKGVsZW1lbnQpID0+IHtcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICAgICAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlLWJ1dHRvbicpO1xuICAgIH1cblxuICAgIG9wZW4gKCkge1xuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgfVxuXG4gICAgY2xvc2UgKCkge1xuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgfVxuXG4gICAgX2hhbmRsZU92ZXJsYXlDbGljayA9IChldnQpID0+IHtcbiAgICAgICAgaWYgKGV2dC50YXJnZXQgPT09IGV2dC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7IFxuICAgICAgICB9XG4gICAgfVxuICBcbiAgICBfaGFuZGxlRXNjQ2xvc2UgPSAoZXZ0KSA9PiB7XG4gICAgICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7IFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMgKCkgeyBcbiAgICAgICAgdGhpcy5fY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX2hhbmRsZU92ZXJsYXlDbGljayk7XG4gICAgfVxufVxuICAiLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cC5qcyc7IFxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHsgXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgdGl0bGUsIGxpbmspIHtcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgICAgIHRoaXMuX2ltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xuICAgICAgICB0aGlzLl9pbWFnZUNhcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlLWNhcHRpb24nKTtcbiAgICB9XG5cbiAgICBfc2V0SW1hZ2VQb3B1cEF0dHJpYnV0ZXMgPSAobmFtZSwgbGluaykgPT4ge1xuICAgICAgICB0aGlzLl9pbWFnZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIGxpbmspO1xuICAgICAgICB0aGlzLl9pbWFnZS5zZXRBdHRyaWJ1dGUoJ2FsdCcsIG5hbWUpO1xuICAgICAgICB0aGlzLl9pbWFnZUNhcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIH1cblxuICAgIG9wZW4gPSAobmFtZSwgbGluaykgPT4geyBcbiAgICAgICAgc3VwZXIub3BlbigpO1xuICAgICAgICB0aGlzLl9zZXRJbWFnZVBvcHVwQXR0cmlidXRlcyhuYW1lLCBsaW5rKTtcbiAgICB9XG59IiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnOyBcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBzdWJtaXRIYW5kbGVyKSB7XG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgICAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XG4gICAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIgPSBzdWJtaXRIYW5kbGVyO1xuICAgICAgICB0aGlzLl9pbnB1dEZpZWxkcyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCgnLmZvcm1fX2lucHV0Jyk7XG4gICAgfVxuXG4gICAgZ2V0SW5wdXRWYWx1ZXMgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX3VzZXJJbnB1dHMgPSB7fTtcbiAgICAgICAgdGhpcy5faW5wdXRGaWVsZHMuZm9yRWFjaChpbnB1dCA9PiB7XG4gICAgICAgICAgICB0aGlzLl91c2VySW5wdXRzW2lucHV0Lm5hbWVdID0gIGlucHV0LnZhbHVlOyBcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHRoaXMuX3VzZXJJbnB1dHM7XG4gICAgfVxuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMgKCkge1xuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgICAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIHRoaXMuX3N1Ym1pdEhhbmRsZXIpO1xuICAgIH1cblxuICAgIGNsb3NlID0gKCkgPT4ge1xuICAgICAgICBzdXBlci5jbG9zZSgpOyBcbiAgICAgICAgdGhpcy5fZm9ybS5yZXNldCgpO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyB1c2VySW5mbyB7XG4gICAgY29uc3RydWN0b3IoeyBuYW1lRWxlbWVudFNlbGVjdG9yLCBhYm91dEVsZW1lbnRTZWxlY3Rvcn0pIHtcbiAgICAgICAgdGhpcy5fcHJvZmlsZU5hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lRWxlbWVudFNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5fcHJvZmlsZUFib3V0TWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhYm91dEVsZW1lbnRTZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgZ2V0VXNlckluZm8gKCkge1xuICAgICAgICB0aGlzLl9jdXJyZW50VXNlckluZm8gPSB7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLl9wcm9maWxlTmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXG4gICAgICAgICAgICBhYm91dDogdGhpcy5fcHJvZmlsZUFib3V0TWVFbGVtZW50LnRleHRDb250ZW50XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB0aGlzLl9jdXJyZW50VXNlckluZm87XG4gICAgfVxuXG4gICAgc2V0VXNlckluZm8gKG5hbWUsIGFib3V0KSB7XG4gICAgICAgIHRoaXMuX3Byb2ZpbGVOYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgICAgIHRoaXMuX3Byb2ZpbGVBYm91dE1lRWxlbWVudC50ZXh0Q29udGVudCA9IGFib3V0O1xuICAgIH1cbn0iLCJjb25zdCBlZGl0UHJvZmlsZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW5mby1lZGl0LWJ1dHRvblwiKTtcbmNvbnN0IGVkaXRQcm9maWxlRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZS1lZGl0LWZvcm1cIik7XG5cbmNvbnN0IG5hbWVGaWVsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYW1lJyk7XG5jb25zdCBhYm91dEZpZWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Fib3V0LW1lJyk7XG5cbmNvbnN0IGFkZFBvc3RCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XG5jb25zdCBhZGRQb3N0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLXBvc3QtZm9ybVwiKTtcblxuY29uc3QgaW5pdGlhbENhcmRzID0gW1xuICAgIHtcbiAgICAgIHRpdGxlOiBcIkxhZ28gZGkgQnJhaWVzXCIsXG4gICAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvdmFub2lzZS5qcGdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiBcIkxhdGVtYXJcIixcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiBcIkJhbGQgTW91bnRhaW5zXCIsXG4gICAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6IFwiTGFrZSBMb3Vpc2VcIixcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUveW9zZW1pdGUuanBnXCIsXG4gICAgfSxcbl07XG5cbmNvbnN0IGNsYXNzZXMgPSB7XG4gICAgZm9ybVNlbGVjdG9yOiBcIi5mb3JtXCIsXG4gICAgaW5wdXRTZWxlY3RvcjogXCIuZm9ybV9faW5wdXRcIixcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIuZm9ybV9fc2F2ZS1idXR0b25cIixcbiAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImZvcm1fX3NhdmUtYnV0dG9uX2Rpc2FibGVkXCIsXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcImZvcm1fX2lucHV0X3R5cGVfaW52YWxpZFwiLFxuICAgIGVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXG59O1xuXG5jb25zdCBsb2dvSW1hZ2VFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2xvZ28taW1hZ2UnKTtcblxuY29uc3QgYXZhdGFySW1hZ2VFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2F2YXRhci1pbWFnZScpO1xuXG5jb25zdCBpbml0aWFsUG9wdXBJbWFnZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5pdGlhbC1wb3B1cC1pbWFnZScpO1xuXG5leHBvcnQgeyBlZGl0UHJvZmlsZUJ1dHRvbiwgZWRpdFByb2ZpbGVGb3JtLCBuYW1lRmllbGQsIGFib3V0RmllbGQsIGFkZFBvc3RCdXR0b24sIGFkZFBvc3RGb3JtLCBpbml0aWFsQ2FyZHMsIGNsYXNzZXMsIFxuICBsb2dvSW1hZ2VFbGVtZW50LCBhdmF0YXJJbWFnZUVsZW1lbnQsIGluaXRpYWxQb3B1cEltYWdlRWxlbWVudH0iLCIvLyBsb2FkIHN0eWxlc2hlZXRzXG5pbXBvcnQgJy4uL3BhZ2VzL2luZGV4LmNzcyc7XG5cbi8vIGxvYWQgaW1hZ2VzIFxuaW1wb3J0IGxvZ29JbWFnZUZpbGUgZnJvbSAnLi4vaW1hZ2VzL2xvZ28uc3ZnJzsgXG5pbXBvcnQgYXZhdGFySW1hZ2VGaWxlIGZyb20gJy4uL2ltYWdlcy9hdmF0YXIuanBnJztcbmltcG9ydCBpbml0aWFsUG9wdXBJbWFnZUZpbGUgZnJvbSAnLi4vaW1hZ2VzL2xhdGVtYXIuanBnJztcblxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgdXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcblxuaW1wb3J0IHsgZWRpdFByb2ZpbGVCdXR0b24sIGVkaXRQcm9maWxlRm9ybSwgbmFtZUZpZWxkLCBhYm91dEZpZWxkLCBhZGRQb3N0QnV0dG9uLCBhZGRQb3N0Rm9ybSwgaW5pdGlhbENhcmRzLCBjbGFzc2VzLCBcbiAgbG9nb0ltYWdlRWxlbWVudCwgYXZhdGFySW1hZ2VFbGVtZW50LCBpbml0aWFsUG9wdXBJbWFnZUVsZW1lbnR9IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7IFxuXG5cbi8vIGxvYWQgaW5pdGlhbCBjYXJkc1xuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNmb2N1cy1pbWFnZS1wb3B1cFwiKTtcbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuZnVuY3Rpb24gY3JlYXRlQ2FyZCAoZGF0YSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoZGF0YSwgXCIudGVtcGxhdGVfX3Bvc3RcIiwgKG5hbWUsIGxpbmspID0+IHtcbiAgICBpbWFnZVBvcHVwLm9wZW4obmFtZSwgbGluayk7XG4gIH0pXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5jcmVhdGVQb3N0KCk7XG4gIHJldHVybiBjYXJkRWxlbWVudDtcbn1cblxuY29uc3QgY2FyZFNlY3Rpb24gPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXG4gICAgcmVuZGVyZXI6IChkYXRhKSA9PiB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gY3JlYXRlQ2FyZChkYXRhKTtcbiAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oZWxlbWVudCk7XG4gICAgfSxcbiAgfSxcbiAgXCIucG9zdHMtZ3JpZFwiXG4pO1xuY2FyZFNlY3Rpb24ucmVuZGVyRWxlbWVudHMoKTtcblxuXG4vLyB2YWlkYXRlIGZvcm1zXG5jb25zdCBhZGRQb3N0VmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKGNsYXNzZXMsIGFkZFBvc3RGb3JtKTtcbmFkZFBvc3RWYWxpZGF0aW9uLmVuYWJsZVZhbGlkYXRpb24oKTtcbmNvbnN0IGVkaXRQcm9maWxlVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKGNsYXNzZXMsIGVkaXRQcm9maWxlRm9ybSk7XG5lZGl0UHJvZmlsZVZhbGlkYXRpb24uZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5cbi8vIGNyZWF0ZSBwb3B1cCBpbnN0YW5jZXNcbmNvbnN0IGVkaXRQcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNlZGl0LXByb2ZpbGUtcG9wdXBcIiwgaGFuZGxlU2F2ZVByb2ZpbGVDaGFuZ2VzKTtcbmVkaXRQcm9maWxlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmNvbnN0IGFkZFBvc3RQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI2FkZC1wb3N0LXBvcHVwXCIsIGhhbmRsZUNyZWF0ZVBvc3QpO1xuYWRkUG9zdFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cblxuLy8gZWRpdCBwcm9maWxlXG5jb25zdCB1c2VyID0gbmV3IHVzZXJJbmZvICh7XG4gIG5hbWVFbGVtZW50U2VsZWN0b3I6ICcucHJvZmlsZV9faW5mby1uYW1lJywgXG4gIGFib3V0RWxlbWVudFNlbGVjdG9yOiAnLnByb2ZpbGVfX2luZm8tZGVzY3JpcHRvcid9KTtcblxuZnVuY3Rpb24gc2V0SW5pdGFsRm9ybUZpZWxkcygpIHtcbiAgY29uc3QgY3VycmVudFVzZXJJbmZvID0gdXNlci5nZXRVc2VySW5mbygpO1xuICBuYW1lRmllbGQudmFsdWUgPSBjdXJyZW50VXNlckluZm8ubmFtZTtcbiAgYWJvdXRGaWVsZC52YWx1ZSA9IGN1cnJlbnRVc2VySW5mby5hYm91dDsgXG59XG5cbmZ1bmN0aW9uIGhhbmRsZUVkaXRQcm9maWxlICgpIHtcbiAgZWRpdFByb2ZpbGVQb3B1cC5vcGVuKCk7XG4gIHNldEluaXRhbEZvcm1GaWVsZHMoKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlU2F2ZVByb2ZpbGVDaGFuZ2VzKGV2ZW50KSB7XG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IHVzZXJGb3JtRGF0YSA9IGVkaXRQcm9maWxlUG9wdXAuZ2V0SW5wdXRWYWx1ZXMoKTtcbiAgdXNlci5zZXRVc2VySW5mbyh1c2VyRm9ybURhdGEubmFtZSwgdXNlckZvcm1EYXRhWydhYm91dC1tZSddKTtcbiAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZSgpOyBcbn1cblxuXG4vLyBhZGQgcG9zdFxuZnVuY3Rpb24gaGFuZGxlQWRkUG9zdCgpIHtcbiAgYWRkUG9zdFBvcHVwLm9wZW4oKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQ3JlYXRlUG9zdChldmVudCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCBwb3N0Rm9ybURhdGEgPSBhZGRQb3N0UG9wdXAuZ2V0SW5wdXRWYWx1ZXMoKTtcbiAgY29uc3QgZWxlbWVudCA9IGNyZWF0ZUNhcmQocG9zdEZvcm1EYXRhKTtcbiAgY2FyZFNlY3Rpb24uYWRkSXRlbShlbGVtZW50KTtcbiAgYWRkUG9zdFBvcHVwLmNsb3NlKCk7XG59XG5cbi8vIHNldCBldmVudCBsaXN0ZW5lcnNcbmFkZFBvc3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgYWRkUG9zdFZhbGlkYXRpb24ucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGhhbmRsZUFkZFBvc3QoKTtcbn0pO1xuZWRpdFByb2ZpbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgZWRpdFByb2ZpbGVWYWxpZGF0aW9uLnJlc2V0VmFsaWRhdGlvbigpO1xuICBoYW5kbGVFZGl0UHJvZmlsZSgpO1xufSk7XG5cblxuLy9zZXQgaW1hZ2VzXG5sb2dvSW1hZ2VFbGVtZW50LnNyYyA9IGxvZ29JbWFnZUZpbGU7XG5hdmF0YXJJbWFnZUVsZW1lbnQuc3JjID0gYXZhdGFySW1hZ2VGaWxlOyBcbmluaXRpYWxQb3B1cEltYWdlRWxlbWVudC5zcmMgPSBpbml0aWFsUG9wdXBJbWFnZUZpbGU7ICJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiQ2FyZCIsImRhdGEiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiX3Bvc3QiLCJyZW1vdmUiLCJldmVudCIsInRhcmdldCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInRoaXMiLCJfdGl0bGUiLCJ0aXRsZSIsIl9saW5rIiwibGluayIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfcG9zdFRlbXBsYXRlRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIl9wb3N0VGVtcGxhdGUiLCJjb250ZW50IiwiX3Bvc3RFbGVtZW50IiwiY2xvbmVOb2RlIiwiX2dldFRlbXBsYXRlIiwiX3Bvc3RJbWFnZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJfcG9zdENhcHRpb25UZXh0RWxlbWVudCIsInRleHRDb250ZW50IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2RlbGV0ZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlRGVsZXRlIiwiX2ltYWdlIiwiX2xpa2VCdXR0b24iLCJfaGFuZGxlTGlrZSIsIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5ncyIsImZvcm1FbGVtZW50IiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JNZXNzYWdlRWxlbWVudCIsIl9mb3JtRWxlbWVudCIsImlkIiwiYWRkIiwiX2lucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2Zvcm1JbnB1dHMiLCJzb21lIiwiaW5wdXQiLCJ0b2dnbGVTdWJtaXRCdXR0b24iLCJmb3JFYWNoIiwiX2hhc0ludmFsaWRJbnB1dCIsIl9zdWJtaXRCdXR0b24iLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsInJlbW92ZUF0dHJpYnV0ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIml0ZW0iLCJfcmVuZGVyZXIiLCJlbGVtZW50IiwiX2NvbnRhaW5lciIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJjdXJyZW50VGFyZ2V0IiwiY2xvc2UiLCJrZXkiLCJfcG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfY2xvc2VCdXR0b24iLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX2hhbmRsZU92ZXJsYXlDbGljayIsIlBvcHVwV2l0aEltYWdlIiwibmFtZSIsIl9pbWFnZUNhcHRpb24iLCJfc2V0SW1hZ2VQb3B1cEF0dHJpYnV0ZXMiLCJQb3B1cFdpdGhGb3JtIiwic3VibWl0SGFuZGxlciIsIl91c2VySW5wdXRzIiwiX2lucHV0RmllbGRzIiwidmFsdWUiLCJfZm9ybSIsInJlc2V0IiwiX3N1Ym1pdEhhbmRsZXIiLCJ1c2VySW5mbyIsIm5hbWVFbGVtZW50U2VsZWN0b3IiLCJhYm91dEVsZW1lbnRTZWxlY3RvciIsIl9wcm9maWxlTmFtZUVsZW1lbnQiLCJfcHJvZmlsZUFib3V0TWVFbGVtZW50IiwiX2N1cnJlbnRVc2VySW5mbyIsImFib3V0IiwiZWRpdFByb2ZpbGVCdXR0b24iLCJlZGl0UHJvZmlsZUZvcm0iLCJuYW1lRmllbGQiLCJhYm91dEZpZWxkIiwiYWRkUG9zdEJ1dHRvbiIsImFkZFBvc3RGb3JtIiwiY2xhc3NlcyIsImZvcm1TZWxlY3RvciIsImxvZ29JbWFnZUVsZW1lbnQiLCJhdmF0YXJJbWFnZUVsZW1lbnQiLCJpbml0aWFsUG9wdXBJbWFnZUVsZW1lbnQiLCJpbWFnZVBvcHVwIiwiY3JlYXRlQ2FyZCIsIm9wZW4iLCJjcmVhdGVQb3N0Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJjYXJkU2VjdGlvbiIsImFkZEl0ZW0iLCJyZW5kZXJFbGVtZW50cyIsImFkZFBvc3RWYWxpZGF0aW9uIiwiZW5hYmxlVmFsaWRhdGlvbiIsImVkaXRQcm9maWxlVmFsaWRhdGlvbiIsImVkaXRQcm9maWxlUG9wdXAiLCJ1c2VyRm9ybURhdGEiLCJnZXRJbnB1dFZhbHVlcyIsInVzZXIiLCJzZXRVc2VySW5mbyIsImFkZFBvc3RQb3B1cCIsInJlc2V0VmFsaWRhdGlvbiIsImN1cnJlbnRVc2VySW5mbyIsImdldFVzZXJJbmZvIiwic3JjIiwibG9nb0ltYWdlRmlsZSIsImF2YXRhckltYWdlRmlsZSIsImluaXRpYWxQb3B1cEltYWdlRmlsZSJdLCJzb3VyY2VSb290IjoiIn0=