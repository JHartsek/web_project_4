(()=>{"use strict";var e="";const t=e+"50fce9df697a07971411.svg",n=e+"7a0b85df4e06c9be0cf6.jpg",r=e+"8f7af7ee8641b74b1e28.jpg";function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t,n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_handleDelete",(function(){o._post.remove(),o._post=null})),i(this,"_handleLike",(function(e){e.target.classList.toggle("post__caption-like__button_active")})),this._title=t.title,this._link=t.link,this.templateSelector=n,this._handleCardClick=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._postTemplateElement=document.querySelector(this.templateSelector),this._postTemplate=this._postTemplateElement.content,this._postElement=this._postTemplate.querySelector(".post").cloneNode(!0),this._postElement}},{key:"createPost",value:function(){return this._post=this._getTemplate(),this._postImageElement=this._post.querySelector(".post__image"),this._postImageElement.setAttribute("src",this._link),this._postImageElement.setAttribute("alt",this._title),this._postCaptionTextElement=this._post.querySelector(".post__caption-text"),this._postCaptionTextElement.textContent=this._title,this._setEventListeners(),this._post}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton=this._post.querySelector(".post__delete"),this._deleteButton.addEventListener("click",this._handleDelete),this._image=this._post.querySelector(".post__image"),this._image.addEventListener("click",(function(){e._handleCardClick(e._title,e._link)})),this._likeButton=this._post.querySelector(".post__caption-like__button"),this._likeButton.addEventListener("click",this._handleLike)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=l((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a(this,"_showInputError",(function(e,t){var n=r._formElement.querySelector(".".concat(e.id,"-input-error"));e.classList.add(r._inputErrorClass),n.textContent=t,n.classList.add(r._errorClass)})),a(this,"_hideInputError",(function(e){var t=r._formElement.querySelector(".".concat(e.id,"-input-error"));e.classList.remove(r._inputErrorClass),t.textContent=" ",t.classList.remove(r._errorClass)})),a(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),a(this,"_hasInvalidInput",(function(){return r._formInputs.some((function(e){return!e.validity.valid}))})),a(this,"resetValidation",(function(){r.toggleSubmitButton(),r._formInputs.forEach((function(e){r._hideInputError(e)}))})),a(this,"toggleSubmitButton",(function(){r._hasInvalidInput(r._formInputs)?(r._submitButton.classList.add(r._inactiveButtonClass),r._submitButton.setAttribute("disabled",!0)):(r._submitButton.classList.remove(r._inactiveButtonClass),r._submitButton.removeAttribute("disabled"))})),a(this,"_setEventListeners",(function(){r.toggleSubmitButton(r._formInputs,r._submitButton),r._formInputs.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r.toggleSubmitButton(r._formInputs,r._submitButton)}))}))})),a(this,"enableValidation",(function(){r._formElement.addEventListener("submit",(function(e){e.preventDefault()})),r._setEventListeners()})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._formInputs=Array.from(this._formElement.querySelectorAll(this._inputSelector))}));function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return t&&p(e.prototype,t),n&&p(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var _=f((function e(t,n){var r=this,o=t.items,i=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),m(this,"renderElements",(function(){r._items.forEach((function(e){r._renderer(e)}))})),m(this,"addItem",(function(e){r._container.prepend(e)})),this._items=o,this._renderer=i,this._container=document.querySelector(n)}));function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var b=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),y(this,"_handleOverlayClick",(function(e){e.target===e.currentTarget&&n.close()})),y(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),this._popupSelector=t,this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popupElement.addEventListener("mousedown",this._handleOverlayClick)}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function v(e,t){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},v(e,t)}function g(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return E(e)}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}function j(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(n);if(r){var o=O(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return g(this,e)});function i(e,t,n){var r,u;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),j(E(u=o.call(this,e)),"_setImagePopupAttributes",(function(e,t){u._image.setAttribute("src",t),u._image.setAttribute("alt",e),u._imageCaption.textContent=e})),j(E(u),"open",(function(e,t){w((r=E(u),O(i.prototype)),"open",r).call(r),u._setImagePopupAttributes(e,t)})),u._image=document.querySelector(".popup__image"),u._imageCaption=document.querySelector(".popup__image-caption"),u}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(b);function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function L(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return B(e)}function B(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=x(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},q.apply(this,arguments)}function x(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}function R(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function u(e,t){var n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),R(B(r=i.call(this,e)),"getInputValues",(function(){return r._userInputs={},r._inputFields.forEach((function(e){r._userInputs[e.name]=e.value})),r._userInputs})),R(B(r),"close",(function(){q((n=B(r),T(u.prototype)),"close",n).call(n),r._form.reset()})),r._form=r._popupElement.querySelector(".form"),r._submitHandler=t,r._inputFields=r._form.querySelectorAll(".form__input"),r}return t=u,(n=[{key:"setEventListeners",value:function(){q(T(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._submitHandler)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t){var n=t.nameElementSelector,r=t.aboutElementSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileNameElement=document.querySelector(n),this._profileAboutMeElement=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._currentUserInfo={name:this._profileNameElement.textContent,about:this._profileAboutMeElement.textContent},this._currentUserInfo}},{key:"setUserInfo",value:function(e,t){this._profileNameElement.textContent=e,this._profileAboutMeElement.textContent=t}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),U=document.querySelector(".profile__info-edit-button"),M=document.querySelector(".profile-edit-form"),N=document.querySelector("#name"),F=document.querySelector("#about-me"),H=document.querySelector(".profile__add-button"),Y=document.querySelector(".add-post-form"),z={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__input_type_invalid",errorClass:"form__input-error_active"},G=document.querySelector("#logo-image"),J=document.querySelector("#avatar-image"),K=document.querySelector("#initial-popup-image"),Q=new k("#focus-image-popup");function W(e){return new u(e,".template__post",(function(e,t){Q.open(e,t)})).createPost()}Q.setEventListeners();var X=new _({items:[{title:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"},{title:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{title:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"}],renderer:function(e){var t=W(e);X.addItem(t)}},".posts-grid");X.renderElements();var Z=new c(z,Y);Z.enableValidation();var $=new c(z,M);$.enableValidation();var ee=new A("#edit-profile-popup",(function(e){e.preventDefault();var t=ee.getInputValues();ne.setUserInfo(t.name,t["about-me"]),ee.close()}));ee.setEventListeners();var te=new A("#add-post-popup",(function(e){e.preventDefault();var t=W(te.getInputValues());X.addItem(t),te.close()}));te.setEventListeners();var ne=new D({nameElementSelector:".profile__info-name",aboutElementSelector:".profile__info-descriptor"});H.addEventListener("click",(function(){Z.resetValidation(),te.open()})),U.addEventListener("click",(function(){var e;$.resetValidation(),ee.open(),e=ne.getUserInfo(),N.value=e.name,F.value=e.about})),G.src=t,J.src=n,K.src=r})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,